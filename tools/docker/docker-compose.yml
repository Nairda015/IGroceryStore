services:

# general          
  rabbitmq:
    image: rabbitmq:latest
    container_name: rabbitmq
    volumes:
      - ../volumes/rabbitmq/data/:/var/lib/rabbitmq
      - ../volumes/rabbitmq/log/:/var/log/rabbitmq
    ports:
      - 5672:5672
      - 15672:15672

  cache:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - 6379:6379
    volumes:
      - ../volumes/redis:/data    

# for modules
  postgres:
    image: postgres:latest
    container_name: postgres
    profiles: [ "all", "webapi", "users", "baskets" ]
    volumes:
      - ../volumes/postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=admin
      - POSTGRES_USER=postgres
      - POSTGRES_DB=IGroceryStoreDb
      - POSTGRES_PORT=5432
    ports:
      - 5432:5432
  
  eventstore:
    container_name: eventstore
    image: ghcr.io/eventstore/eventstore:21.10.0-alpha-arm64v8
    profiles: ["all", "webapi", "baskets"]
    environment:
      - EVENTSTORE_CLUSTER_SIZE=1
      - EVENTSTORE_RUN_PROJECTIONS=All
      - EVENTSTORE_START_STANDARD_PROJECTIONS=true
      - EVENTSTORE_EXT_TCP_PORT=1113
      - EVENTSTORE_HTTP_PORT=2113
      - EVENTSTORE_INSECURE=true
      - EVENTSTORE_ENABLE_EXTERNAL_TCP=true
      - EVENTSTORE_ENABLE_ATOM_PUB_OVER_HTTP=true
    ports:
      - "1113:1113"
      - "2113:2113"
    volumes:
      - ../volumes/eventstore/data/:/var/lib/eventstore/
      - ../volumes/eventstore/log/:/var/log/eventstore
    
  mongo:
    image: mongo:latest
    container_name: mongo
    profiles: [ "all", "webapi", "baskets"]
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    volumes:
      - ../volumes/mongo:/data/db
  
  dynamodb-local:
    command: "-jar DynamoDBLocal.jar -sharedDb -dbPath ./data"
    image: amazon/dynamodb-local:latest
    profiles: [ "all", "webapi", "shops"]
    container_name: dynamodb
    ports:
      - 8000:8000
    volumes:
      - ./docker/dynamodb:/home/dynamodblocal/data
    working_dir: /home/dynamodblocal
    
# observability    
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    profiles: [ "all", "jaeger" ]
    restart: always
    ports:
      - 5775:5775/udp
      - 6831:6831/udp
      - 6832:6832/udp
      - 5778:5778
      - 16686:16686
      - 14250:14250
      - 14268:14268
      - 14269:14269
      - 9411:9411
    
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.6
    container_name: elasticsearch
    profiles: ["all", "logs", "elastic"]
    ports:
      - 9200:9200/tcp
    environment:
      - discovery.type=single-node
    volumes:
        - ../volumes/elasticsearch:/usr/share/elasticsearch/data
   
  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.6
    container_name: kibana
    profiles: [ "all", "logs", "kibana" ]
    ports:
      - 5601:5601/tcp